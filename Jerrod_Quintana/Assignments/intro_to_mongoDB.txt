use my_first_db
	Create a database called 'my_first_db'.

db.createCollection('students')
	Create students collection.


db.students.insert({name: 'Jerrod', home_state: 'Texas', lucky_number: 7, birthday:{month: 2, day: 28, year: 1993}})
db.students.insert({name: 'Ryan', home_state: 'Texas', lucky_number: 9, birthday:{month: 2, day: 28, year: 1993}})
db.students.insert({name: 'Mark', home_state: 'Texas', lucky_number: 4, birthday:{month: 9, day: 11, year: 1980}})
db.students.insert({name: 'Louise', home_state: 'Texas', lucky_number: 1, birthday:{month: 7, day: 15, year: 1996}})
db.students.insert({name: 'Jennifer', home_state: 'Texas', lucky_number: 18, birthday:{month: 10, day: 6, year: 1991}})	
	Each document you insert into this collection should have the following 		format: ({name: STRING, home_state: STRING, lucky_number: NUMBER, birthday: 	{month: NUMBER, day: NUMBER, year: NUMBER}})
	
	Create 5 students with the appropriate info.

db.students.find().pretty()
	Get all students.

db.students.find({home_state: {$in: ['California', 'Washington']}})
	Retrieve all students who are from California (San Jose Dojo) or Washington 	(Seattle Dojo).

db.students.find({lucky_number: {$gt: 3}})
	Get all students whose lucky number is:
	greater than 3

db.students.find({lucky_number: {$lte: 10}})
	less than or equal to 10

db.students.find({$and: [{lucky_number: {$gte: 1}}, {lucky_number: {$lte: 9}}] })
	between 1 and 9 (inclusive)

db.students.updateMany({home_state: 'Texas'},{$set:{interests: ['coding', 'brunch', 'MongoDB']}})
	Add a field to each student collection called 'interests' that is an ARRAY.  	It should contain the following entries: 'coding', 'brunch', 'MongoDB'. Do 		this in ONE operation.

db.students.update({name: 'Jerrod'},{$push: {interests: 'VideoGames'}})
db.students.update({name: 'Ryan'},{$push: {interests: 'BeingAFool'}})
db.students.update({name: 'Louise'},{$push: {interests: 'Baseball'}})
db.students.update({name: 'Mark'},{$push: {interests: 'Skiing'}})
db.students.update({name: 'Jennifer'},{$push: {interests: 'Knitting'}})
	Add some unique interests for each particular students into each of their 		interest arrays.

db.students.update({name: 'Jennifer'},{$push: {interests: 'Taxes'}})
	Add the interest 'taxes' into someone's interest array.

db.students.update({name: 'Jennifer'},{$pop: {interests: 1}})
	Remove the 'taxes' interest you just added.

db.students.remove({$and: [{home_state: 'California'},{home_state: 'Washington'}] })
	Remove all students who are from California (or Washington).

db.students.remove({name: 'Louise'})
	Remove a user by name. 

db.students.remove( {lucky_number: {$gt: 5} } ,true)
	Remove a student whose lucky number is greater than 5 (JUST ONE)

db.students.updateMany( {home_state: 'Texas'}, { $set: {number_of_belts: 0} } )
	Add a field to each student collection called 'number_of_belts' and set it to 	0.

db.students.updateMany( {home_state: 'Washington'}, { $set: {number_of_belts: 1} } )
	Increment this field by 1 for all students in Washington (Seattle Dojo).

db.students.updateMany({home_state: 'Texas'}, { $rename: {number_of_belts: 'belts_earned'} })
	Rename the 'number_of_belts' field to 'belts_earned'

db.students.updateMany({home_state: 'Texas'}, { $unset: {lucky_number: '' } } )
	Remove the 'lucky_number' field.

db.students.updateMany( {home_state: 'Texas'}, { $currentDate: {updated_on: true} } )
	Add a 'updated_on' field, and set the value as the current date.

